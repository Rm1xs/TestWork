@model IEnumerable<TestWork.Models.Map>
@{
    ViewBag.Title = "Home Page";
}

<script>
    function isValidUrl() {
        try {
            var val = document.getElementById('website').value;
            new URL(val);
        } catch (_) {
            event.preventDefault();
            document.getElementById('website').value = "";
            alert("Invalid url");
        }
        return true;
    }
</script>
@if (@ViewData["MessageBad"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert" style="margin-top:2%;">
        @ViewData["MessageBad"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
@if (@ViewData["MessageGood"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert" style="margin-top:2%;">
        @ViewData["MessageGood"]
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
@*<script>
        if (@ViewData["Message"] != null)
        {
            alert(@ViewData["Message"]);
            @ViewData["Message"] = null;
        }
    </script>*@
<form action="/Home/Index" method="post" style="margin-top:2%;">
    <div class="form-row" id="uriForm">
        <div class="col-md-6 mb-3">
            <label for="validationServer01">Enter URL:</label>
            <div class="col-sm-6">
                <input id="website" type="text" class="form-control" name="website" value="" />
            </div>
        </div>
    </div>
    <button onclick="isValidUrl()" class="btn btn-primary" type="submit">Submit</button>
</form>
<div id="chartContainer" style="height: 350px;"></div>
<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
@if (Model != null)
{
    <div id="table" class="table table-striped" cellspacing="0" width="100%">
        <table class="table">
            <tr>
                <th>
                    ID
                </th>
                <th>
                    URL
                </th>
                <th>
                    Speed
                </th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.IdNumb)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Url)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Speed) msec.
                    </td>
                </tr>
            }
        </table>
    </div>
}
<script type="text/javascript">
    window.onload = function () {
            var chart = new CanvasJS.Chart("chartContainer", {
				theme: "light2",
                animationEnabled: true,

				title: {
                    text: "Loading Speed",
                },
                subtitles: [{
                    text: "ID/MS"
                }],
				data: [
				{
                        type: "column",
                        //color: "green",
					dataPoints: @Html.Raw(ViewBag.DataPoints),
				}
				]
			});
			chart.render();
		};
</script>